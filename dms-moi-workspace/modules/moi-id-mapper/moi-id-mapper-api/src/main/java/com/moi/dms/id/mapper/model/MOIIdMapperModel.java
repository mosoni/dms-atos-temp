/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.moi.dms.id.mapper.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the MOIIdMapper service. Represents a row in the &quot;moi_idmapper&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.moi.dms.id.mapper.model.impl.MOIIdMapperModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.moi.dms.id.mapper.model.impl.MOIIdMapperImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MOIIdMapper
 * @generated
 */
@ProviderType
public interface MOIIdMapperModel extends BaseModel<MOIIdMapper>, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a moi ID mapper model instance should use the {@link MOIIdMapper} interface instead.
	 */

	/**
	 * Returns the primary key of this moi ID mapper.
	 *
	 * @return the primary key of this moi ID mapper
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this moi ID mapper.
	 *
	 * @param primaryKey the primary key of this moi ID mapper
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mapper ID of this moi ID mapper.
	 *
	 * @return the mapper ID of this moi ID mapper
	 */
	public long getMapperId();

	/**
	 * Sets the mapper ID of this moi ID mapper.
	 *
	 * @param mapperId the mapper ID of this moi ID mapper
	 */
	public void setMapperId(long mapperId);

	/**
	 * Returns the group ID of this moi ID mapper.
	 *
	 * @return the group ID of this moi ID mapper
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this moi ID mapper.
	 *
	 * @param groupId the group ID of this moi ID mapper
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this moi ID mapper.
	 *
	 * @return the company ID of this moi ID mapper
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this moi ID mapper.
	 *
	 * @param companyId the company ID of this moi ID mapper
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the mosip current state of this moi ID mapper.
	 *
	 * @return the mosip current state of this moi ID mapper
	 */
	@AutoEscape
	public String getMosipCurrentState();

	/**
	 * Sets the mosip current state of this moi ID mapper.
	 *
	 * @param mosipCurrentState the mosip current state of this moi ID mapper
	 */
	public void setMosipCurrentState(String mosipCurrentState);

	/**
	 * Returns the mosip document type of this moi ID mapper.
	 *
	 * @return the mosip document type of this moi ID mapper
	 */
	@AutoEscape
	public String getMosipDocumentType();

	/**
	 * Sets the mosip document type of this moi ID mapper.
	 *
	 * @param mosipDocumentType the mosip document type of this moi ID mapper
	 */
	public void setMosipDocumentType(String mosipDocumentType);

	/**
	 * Returns the registration ID of this moi ID mapper.
	 *
	 * @return the registration ID of this moi ID mapper
	 */
	@AutoEscape
	public String getRegistrationId();

	/**
	 * Sets the registration ID of this moi ID mapper.
	 *
	 * @param registrationId the registration ID of this moi ID mapper
	 */
	public void setRegistrationId(String registrationId);

	/**
	 * Returns the resource ID of this moi ID mapper.
	 *
	 * @return the resource ID of this moi ID mapper
	 */
	public long getResourceId();

	/**
	 * Sets the resource ID of this moi ID mapper.
	 *
	 * @param resourceId the resource ID of this moi ID mapper
	 */
	public void setResourceId(long resourceId);

	/**
	 * Returns the document title of this moi ID mapper.
	 *
	 * @return the document title of this moi ID mapper
	 */
	@AutoEscape
	public String getDocumentTitle();

	/**
	 * Sets the document title of this moi ID mapper.
	 *
	 * @param documentTitle the document title of this moi ID mapper
	 */
	public void setDocumentTitle(String documentTitle);

	/**
	 * Returns the active state of this moi ID mapper.
	 *
	 * @return the active state of this moi ID mapper
	 */
	public int getActiveState();

	/**
	 * Sets the active state of this moi ID mapper.
	 *
	 * @param activeState the active state of this moi ID mapper
	 */
	public void setActiveState(int activeState);

	/**
	 * Returns the file entry ID of this moi ID mapper.
	 *
	 * @return the file entry ID of this moi ID mapper
	 */
	@AutoEscape
	public String getFileEntryId();

	/**
	 * Sets the file entry ID of this moi ID mapper.
	 *
	 * @param fileEntryId the file entry ID of this moi ID mapper
	 */
	public void setFileEntryId(String fileEntryId);

	/**
	 * Returns the update date of this moi ID mapper.
	 *
	 * @return the update date of this moi ID mapper
	 */
	public Date getUpdateDate();

	/**
	 * Sets the update date of this moi ID mapper.
	 *
	 * @param updateDate the update date of this moi ID mapper
	 */
	public void setUpdateDate(Date updateDate);

	/**
	 * Returns the updated by of this moi ID mapper.
	 *
	 * @return the updated by of this moi ID mapper
	 */
	@AutoEscape
	public String getUpdatedBy();

	/**
	 * Sets the updated by of this moi ID mapper.
	 *
	 * @param updatedBy the updated by of this moi ID mapper
	 */
	public void setUpdatedBy(String updatedBy);

}